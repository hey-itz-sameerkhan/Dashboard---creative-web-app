// frontend/src/App.jsx - FINAL FIX FOR RENDER SLEEP MODE

import React, { useEffect } from "react"; // üëà useEffect IMPORTED
import { BrowserRouter, Route, Routes } from "react-router-dom";

// Context Imports
import { AuthProvider } from "./context/AuthContext.jsx";
import { ConfirmProvider } from "./context/ConfirmContext.jsx";
import { NotificationProvider } from "./context/NotificationContext.jsx";
import { TaskProvider } from "./context/TaskContext.jsx";
import { ToastProvider } from "./context/ToastContext.jsx";

// Component Imports
import AdminOnlyRoute from "./components/AdminOnlyRoute.jsx";
import AppLayout from "./components/AppLayout.jsx";
import ProtectedRoute from "./components/ProtectedRoute.jsx";

// Page Imports
import Account from "./pages/Account.jsx";
import AdminDashboard from "./pages/AdminDashboard.jsx";
import AdminUserManagement from "./pages/AdminUserManagement.jsx";
import CalendarPage from "./pages/CalendarPage.jsx";
import ChartsPage from "./pages/ChartsPage.jsx";
import Dashboard from "./pages/Dashboard.jsx";
import Home from "./pages/Home.jsx";
import Login from "./pages/Login.jsx";
import SignUp from "./pages/SignUp.jsx";
import TaskPage from "./pages/TaskPage.jsx";

// ‡§Ü‡§™‡§ï‡•á .env ‡§´‡§º‡§æ‡§á‡§≤ ‡§∏‡•á BACKEND_URL ‡§≤‡•á‡§Ç
// Vite ‡§Æ‡•á‡§Ç Environment Variables 'VITE_' ‡§∏‡•á ‡§∂‡•Å‡§∞‡•Ç ‡§π‡•ã‡§®‡•á ‡§ö‡§æ‡§π‡§ø‡§è‡•§
// ‡§Æ‡§æ‡§® ‡§≤‡§ø‡§Ø‡§æ ‡§ï‡§ø ‡§Ü‡§™‡§ï‡•Ä .env ‡§´‡§º‡§æ‡§á‡§≤ ‡§Æ‡•á‡§Ç VITE_BACKEND_URL=... ‡§π‡•à‡•§
// ‡§Ö‡§ó‡§∞ ‡§®‡§π‡•Ä‡§Ç, ‡§§‡•ã ‡§Ø‡§π ‡§∏‡•Ä‡§ß‡•á BACKEND_URL ‡§∏‡•á ‡§≤‡•á ‡§≤‡•á‡§ó‡§æ ‡§Ö‡§ó‡§∞ ‡§Ø‡§π ‡§ï‡§ø‡§∏‡•Ä ‡§î‡§∞ ‡§§‡§∞‡•Ä‡§ï‡•á ‡§∏‡•á ‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§π‡•ã‡•§
// ‡§ö‡•Ç‡§Ç‡§ï‡§ø ‡§Ü‡§™‡§®‡•á BACKEND_URL=https://dashboard-creative-web-app.onrender.com ‡§∏‡•á‡§ü ‡§ï‡§ø‡§Ø‡§æ ‡§π‡•à,
// ‡§π‡§Æ ‡§á‡§∏‡•á ‡§∏‡•Ä‡§ß‡•á ‡§Ø‡§π‡§æ‡§Ç ‡§π‡§æ‡§∞‡•ç‡§°‡§ï‡•ã‡§° ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç ‡§Ø‡§æ .env ‡§∏‡•á ‡§≤‡•á ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§
// ‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§æ ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§Æ‡•à‡§Ç ‡§á‡§∏‡•á ‡§Ü‡§™‡§ï‡•á ‡§ï‡•ã‡§° ‡§ï‡•á ‡§Ö‡§®‡•Å‡§∏‡§æ‡§∞ Vercel .env ‡§∏‡•á ‡§≤‡•á‡§®‡•á ‡§ï‡§æ ‡§§‡§∞‡•Ä‡§ï‡§æ ‡§¶‡§ø‡§ñ‡§æ ‡§∞‡§π‡§æ ‡§π‡•Ç‡§Å‡•§

// üí° FIX 1: Backend Wake-up Logic
function BackendWakeUp() {
  useEffect(() => {
    // ‡§Ø‡§π Render Backend URL ‡§π‡•à (‡§ú‡•ã ‡§Ü‡§™‡§®‡•á .env ‡§Æ‡•á‡§Ç ‡§¶‡§ø‡§ñ‡§æ‡§Ø‡§æ ‡§π‡•à)
    // Production ‡§Æ‡•á‡§Ç ‡§Ø‡§π Vercel environment variable ‡§∏‡•á ‡§Ü‡§è‡§ó‡§æ
    const backendBaseUrl =
      import.meta.env.VITE_BACKEND_URL ||
      "https://dashboard-creative-web-app.onrender.com";

    // ‡§è‡§ï ‡§∏‡§æ‡§ß‡§æ‡§∞‡§£, ‡§ñ‡§æ‡§≤‡•Ä GET request, ‡§ú‡•ã Render ‡§ï‡•ã Sleep Mode ‡§∏‡•á ‡§ú‡§ó‡§æ ‡§¶‡•á‡§ó‡§æ‡•§
    // ‡§π‡§Æ Base Route ‡§™‡§∞ ‡§∞‡§ø‡§ï‡•ç‡§µ‡•á‡§∏‡•ç‡§ü ‡§ï‡§∞ ‡§∞‡§π‡•á ‡§π‡•à‡§Ç, ‡§ú‡•ã server.js ‡§Æ‡•á‡§Ç ‡§∏‡§ø‡§∞‡•ç‡§´‡§º 'üöÄ Backend running' ‡§≠‡•á‡§ú‡§§‡§æ ‡§π‡•à‡•§
    fetch(backendBaseUrl)
      .then((res) => {
        // ‡§π‡§Æ response data ‡§ï‡•ã ignore ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç, ‡§¨‡§∏ status 200/OK ‡§ö‡§æ‡§π‡§ø‡§è
        if (res.ok) {
          console.log("‚úÖ Render Backend successfully Woke Up.");
        }
      })
      .catch((err) => {
        // ‡§Ö‡§ó‡§∞ ‡§™‡§π‡§≤‡•Ä request fail ‡§π‡•ã ‡§≠‡•Ä ‡§ú‡§æ‡§è (‡§ú‡•à‡§∏‡•á connection error), ‡§§‡•ã ‡§≠‡•Ä ‡§Ø‡§π backend ‡§ï‡•ã start ‡§ï‡§∞ ‡§¶‡•á‡§ó‡§æ
        console.warn(
          "‚ö†Ô∏è Backend Wake-up call completed (potential cold start).",
          err
        );
      });
  }, []);

  return null; // ‡§Ø‡§π ‡§ï‡§Ç‡§™‡•ã‡§®‡•á‡§Ç‡§ü ‡§ï‡•Å‡§õ render ‡§®‡§π‡•Ä‡§Ç ‡§ï‡§∞‡§§‡§æ ‡§π‡•à
}

export default function App() {
  return (
    // FIX 2: BackendWakeUp component ‡§ï‡•ã ‡§∏‡§¨‡§∏‡•á ‡§ä‡§™‡§∞ ‡§ú‡•ã‡§°‡§º‡•á‡§Ç
    <ToastProvider>
      <ConfirmProvider>
        <BrowserRouter>
          <BackendWakeUp /> {/* üëà WAKE UP COMPONENT ADDED HERE */}
          <AuthProvider>
            <NotificationProvider>
              <TaskProvider>
                <Routes>
                  {/* ---------------- PUBLIC ROUTES ---------------- */}
                  <Route path="/login" element={<Login />} />
                  <Route path="/signup" element={<SignUp />} />

                  {/* ---------------- PROTECTED ROUTES WRAPPER ---------------- */}
                  <Route
                    element={
                      <ProtectedRoute>
                        <AppLayout />
                      </ProtectedRoute>
                    }
                  >
                    {/* Standard User Routes - AppLayout ke andar Nested hain */}
                    <Route index element={<Home />} />
                    <Route path="/dashboard" element={<Dashboard />} />
                    <Route path="/tasks" element={<TaskPage />} />
                    <Route path="/account" element={<Account />} />
                    <Route path="/calendar" element={<CalendarPage />} />
                    <Route path="/charts" element={<ChartsPage />} />

                    {/* ---------------- ADMIN ONLY ROUTES ---------------- */}
                    <Route element={<AdminOnlyRoute />}>
                      <Route path="/admin" element={<AdminDashboard />} />
                      <Route
                        path="/admin/users"
                        element={<AdminUserManagement />}
                      />
                    </Route>
                  </Route>
                </Routes>
              </TaskProvider>
            </NotificationProvider>
          </AuthProvider>
        </BrowserRouter>
      </ConfirmProvider>
    </ToastProvider>
  );
}
